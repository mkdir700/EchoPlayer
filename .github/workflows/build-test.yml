name: Build Test

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build (comma-separated: win,mac,linux or all)'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'win'
          - 'mac'
          - 'linux'
          - 'win,mac'
          - 'win,linux'
          - 'mac,linux'
      create_artifacts:
        description: 'Create downloadable artifacts'
        required: false
        default: true
        type: boolean
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'docs/**'

jobs:
  determine-platforms:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.set-platforms.outputs.platforms }}
    steps:
      - name: Determine platforms to build
        id: set-platforms
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            INPUT_PLATFORMS="${{ github.event.inputs.platforms }}"
          else
            INPUT_PLATFORMS="all"
          fi

          if [ "$INPUT_PLATFORMS" == "all" ]; then
            echo "platforms=[\"win\",\"mac\",\"linux\"]" >> $GITHUB_OUTPUT
          else
            # Convert comma-separated string to JSON array
            PLATFORMS=$(echo "$INPUT_PLATFORMS" | sed 's/,/","/g' | sed 's/^/["/' | sed 's/$/"]/')
            echo "platforms=$PLATFORMS" >> $GITHUB_OUTPUT
          fi

  build:
    needs: determine-platforms
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
        include:
          - config:
              platform: win
            build_command: pnpm build:win
          - config:
              platform: mac
            build_command: pnpm build:mac
          - config:
              platform: linux
            build_command: pnpm build:linux

    # Only run if platform is in the determined platforms list
    if: contains(fromJson(needs.determine-platforms.outputs.platforms), matrix.config.platform)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test:run

      - name: Type check
        run: pnpm typecheck

      - name: Build application
        run: pnpm build

      - name: Build packages
        run: ${{ matrix.build_command }}

      - name: List build outputs
        shell: bash
        run: |
          echo "=== Build outputs ==="
          ls -la dist/ || echo "No dist directory"

      - name: Upload build artifacts
        if: github.event.inputs.create_artifacts == 'true' || github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: echolab-${{ matrix.config.platform }}-test-${{ github.run_number }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.snap
            dist/latest*.yml
          retention-days: 3

  build-summary:
    needs: [determine-platforms, build]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Build Summary
        run: |
          echo "## 🏗️ Build Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** ${{ needs.determine-platforms.outputs.platforms }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch/Ref:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "✅ **Status:** All builds completed successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.build.result }}" == "failure" ]; then
            echo "❌ **Status:** Some builds failed" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Status:** Build status unclear" >> $GITHUB_STEP_SUMMARY
          fi
